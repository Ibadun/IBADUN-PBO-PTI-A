Enscapsulation 1
Pertanyaan
1. Lakukan percobaan diatas dan benahi jika menemukan kesalahan
   Jawaban : dalam kode program tersebut saya menemukan beberapa kesalahan, seperti :
   a. setMar("90") --> setMark(90)
   b. System.out.println("s1Name is "+ s1.setName()); --> System.out.println("s1Name is " + s1.getName());
   c. System.out.println("s1Mark is "+ s1.setMark()); --> System.out.println("s1Mark is " + s1.getMark());
   d. System.out.println("name dan mark "+ name +" "+ mark); --> System.out.println("name dan mark "+ s1.getName() +" "+ s1.getMark());

2. Jika pada baris 6 s1.setName diubah menjadi s1.getName apa yang terjadi? jelaskan!
   Jawaban : Jika baris 6 s1.setName dibuah menjadi s1.getName, maka ketika diprint akan menampilkan nama dari objek s1

3. Setelah diperbaiki, ubahlah hak akses pada baris 4 (pada class Student) menjadi private apa yang terjadi jika class Test dijalankan? Jelaskan!
   Jawaban : Jika class tersebut diubah menjadi private maka program pada class Test tidak bisa dijalankan. 
   Hal tersebut dikarenakan class Test tidak dapat mengakses variabel "name" dan "mark" yang bersifat private di dalam class Student.

4. Jika kedua kelas diatas terdapat dalam package yang sama apakah konsep enkapsulasi tetap berfungsi? jelaskan!
   Jawaban :Iya.Karena konsep enkapsulasi tetap akan berfungsi jika kedua class tersebut berada dalam package yang sama.

 
Enscapsulation 2
Pertanyaan
1. Method apakah yang menjadi accessor (getter) ?
   Jawaban : Method yang menjadi accessor (getter) ada getLoad() dan getMaxLoad()

2. Tambahkan source code berikut dibawah baris ke 6 pada class TestVehicle1.
   System.out.println("Add load(100kg) : " + (vehicle.load=500));
   Jalankan program, apakah output dari program tersebut?
   Kembalikan program seperti semula.
   Jawaban : Setelah program dijalankan, terjadi error karena load bersifat private

3. Ubahlah tipe data pada atribut load dan maxload pada class Vehicle1 menjadi public.
   Jalankan program, apakah output dari program tersebut?
   a. Tambahkan source kode berikut dibawah baris ke 6 pada class TestVehicle1.
   System.out.println("Add load(100kg) : " + (vehicle.load=500));
   Jalankan program, apakah output dari program tersebut?
   Kembalikan program seperti semula.
   Jawaban : Ketika program tersebut dijalankan, akan menampilkan "Add load(100kg) : 500.0"

b. Tambahkan source kode berikut dibawah baris ke 12 pada class TestVehicle1.
   System.out.println("Add load(100kg) : " + (vehicle.load=500));
   Jalankan program, apakah output dari program tersebut?
   Kembalikan program seperti semula.
   Jawaban : Ketika program tersebut dijalankan, akan menampilkan "Add load(100kg) : 500.0"

4. Ulangi instruksi pada nomer 4 dengan mengubah tipe data pada atribut load dan maxload pada class Vehicle1 menjadi protected.
   Jawaban : Ketika tipe data pada atribut load dan maxLoad pada class Vehicle1 diubah menjadi protected, konsep enkapsulasi tetap berfungsi. 
   Karena variabel tersebut hanya dapat diakses dalam class Vehicle1 dan subclassnya

5. Ulangi instruksi pada nomer 4 dengan mengubah tipe data pada atribut load dan maxload pada class Vehicle1 menjadi default.
   Jawaban : Ketika tipe data pada atribut load dan maxLoad pada tipe class Vehicle1 diubah menjadi default (tanpa spesifikasi akses), mereka akan memiliki akses paket. 
   Ini berarti mereka dapat diakses oleh kelas lain dalam paket yang sama. 
   Konsep enkapsulasi tidak berfungsi secara penuh karena variabel tersebut dapat diakses dari luar kelas namun masih membatasi akses dari kelas di luar paket.
